name: run tests

on:
  push:
  pull_request:
  merge_group:

jobs:
  testGo:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-go@v5
      with:
        go-version: 1.22.4
    - name: Run CI script
      run: |
        go test -v -cover -covermode=count ./...

  # testGCloudIntegration:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v4
  #   - uses: actions/setup-go@v5
  #     with:
  #       go-version: 1.22.4
  #   - name: Run CI script
  #     run: |
  #       go test -v ./pkg/grafanacloud/...
  #     env:
  #       GRAFANA_CLOUD_TOKEN: ${{ secrets.GRAFANA_CLOUD_TOKEN }}

  alloy_lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-go@v5
      with:
        go-version: '1.22.4'
    - run: |
        cd pkg/controllers
        curl -LO https://github.com/grafana/alloy/releases/download/v1.3.1/alloy-linux-amd64.zip && unzip alloy-linux-amd64.zip
        go test -v ./... -args -verify-alloy

  testHelm:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        depth: 0

    - uses: azure/setup-helm@v4.2.0
      with:
        version: v3.12.0

    - name: Set up chart-testing
      uses: helm/chart-testing-action@v2.7.0

    - run: |
        git fetch origin "${{ github.base_ref }}"
        # Ensure the chart meets requirements
        ct lint --remote origin --target-branch "${{ github.base_ref }}" --charts ./helm-chart/observability-operator
        # Ensure the chart can be rendered with default values set and the generated yaml is coherent
        helm template ./helm-chart/observability-operator
        # Ensure the chart can be rendered with all values set and the generated yaml is coherent
        helm template ./helm-chart/observability-operator -f ./helm-chart/observability-operator/values-test-full.yaml
